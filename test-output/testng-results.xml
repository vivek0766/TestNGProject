<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="26" passed="24">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="322" started-at="2018-10-25T16:28:20Z" finished-at="2018-10-25T16:28:20Z">
    <groups>
      <group name="Smoke">
        <method signature="AmexLoans.amexPersonalLoan()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="amexPersonalLoan" class="udemy.testNG.loans.AmexLoans"/>
        <method signature="Day2.day2moring()[pri:0, instance:udemy.testNG.days.Day2@7f9a81e8]" name="day2moring" class="udemy.testNG.days.Day2"/>
        <method signature="Day1.day1afternoon()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1afternoon" class="udemy.testNG.days.Day1"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Test" duration-ms="322" started-at="2018-10-25T16:28:20Z" finished-at="2018-10-25T16:28:20Z">
      <class name="udemy.testNG.listeners.AssertionExample">
        <test-method status="FAIL" signature="assertion()[pri:0, instance:udemy.testNG.listeners.AssertionExample@6d00a15d]" name="assertion" duration-ms="18" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at udemy.testNG.listeners.AssertionExample.assertion(AssertionExample.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertion -->
      </class> <!-- udemy.testNG.listeners.AssertionExample -->
      <class name="udemy.testNG.parameters.ParametersExample">
        <test-method status="FAIL" signature="dataParameter(java.lang.String)[pri:0, instance:udemy.testNG.parameters.ParametersExample@735b5592]" name="dataParameter" duration-ms="8" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'DATA' is required by @Test on method dataParameter but has not been marked @Optional or defined
in G:\SeleniumWorkspace_Neon\TestNGProject\testng4.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'DATA' is required by @Test on method dataParameter but has not been marked @Optional or defined
in G:\SeleniumWorkspace_Neon\TestNGProject\testng4.xml
	at org.testng.internal.Parameters.createParams(Parameters.java:248)
	at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:286)
	at org.testng.internal.Parameters.createParameters(Parameters.java:547)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:672)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1316)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1044)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1134)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataParameter -->
        <test-method status="PASS" signature="driveData()[pri:0, instance:udemy.testNG.parameters.ParametersExample@735b5592]" name="driveData" duration-ms="2" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driveData -->
      </class> <!-- udemy.testNG.parameters.ParametersExample -->
      <class name="udemy.testNG.loans.BofALoans">
        <test-method status="PASS" signature="beforeBofAClass()[pri:0, instance:udemy.testNG.loans.BofALoans@51efea79]" name="beforeBofAClass" is-config="true" duration-ms="0" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBofAClass -->
        <test-method status="PASS" signature="bofaCarLoan()[pri:0, instance:udemy.testNG.loans.BofALoans@51efea79]" name="bofaCarLoan" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bofaCarLoan -->
        <test-method status="PASS" signature="bofaHomeLoan()[pri:0, instance:udemy.testNG.loans.BofALoans@51efea79]" name="bofaHomeLoan" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bofaHomeLoan -->
        <test-method status="PASS" signature="bofaPersonalLoan()[pri:0, instance:udemy.testNG.loans.BofALoans@51efea79]" name="bofaPersonalLoan" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bofaPersonalLoan -->
      </class> <!-- udemy.testNG.loans.BofALoans -->
      <class name="udemy.testNG.parameters.DataProviderParameter">
        <test-method status="PASS" signature="receiveData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:udemy.testNG.parameters.DataProviderParameter@62ee68d8]" name="receiveData" duration-ms="3" started-at="2018-10-25T11:28:20Z" data-provider="sendData" finished-at="2018-10-25T11:28:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Vivek]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Kvivek0766]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receiveData -->
        <test-method status="PASS" signature="receiveData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:udemy.testNG.parameters.DataProviderParameter@62ee68d8]" name="receiveData" duration-ms="3" started-at="2018-10-25T11:28:20Z" data-provider="sendData" finished-at="2018-10-25T11:28:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Satish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SattiReddy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receiveData -->
      </class> <!-- udemy.testNG.parameters.DataProviderParameter -->
      <class name="udemy.testNG.days.Day1">
        <test-method status="PASS" signature="day1Monday()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1Monday" is-config="true" duration-ms="22" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1Monday -->
        <test-method status="PASS" signature="day1beforeTest()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1beforeTest" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1beforeTest -->
        <test-method status="PASS" signature="day1afternoon()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1afternoon" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1afternoon -->
        <test-method status="PASS" signature="day1moring()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1moring" duration-ms="5" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1moring -->
        <test-method status="PASS" signature="day1night()[pri:0, instance:udemy.testNG.days.Day1@36d4b5c]" name="day1night" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1night -->
      </class> <!-- udemy.testNG.days.Day1 -->
      <class name="udemy.testNG.loans.AmexLoans">
        <test-method status="PASS" signature="amexCarLoan()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="amexCarLoan" duration-ms="2" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amexCarLoan -->
        <test-method status="PASS" signature="afterAmexLoans()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="afterAmexLoans" is-config="true" duration-ms="0" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAmexLoans -->
        <test-method status="PASS" signature="amexHomeLoan()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="amexHomeLoan" duration-ms="2" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amexHomeLoan -->
        <test-method status="PASS" signature="afterAmexLoans()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="afterAmexLoans" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAmexLoans -->
        <test-method status="PASS" signature="amexPersonalLoan()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="amexPersonalLoan" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amexPersonalLoan -->
        <test-method status="PASS" signature="afterAmexLoans()[pri:0, instance:udemy.testNG.loans.AmexLoans@9629756]" name="afterAmexLoans" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAmexLoans -->
      </class> <!-- udemy.testNG.loans.AmexLoans -->
      <class name="udemy.testNG.days.Day2">
        <test-method status="PASS" signature="day2afternoon()[pri:0, instance:udemy.testNG.days.Day2@7f9a81e8]" name="day2afternoon" duration-ms="2" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2afternoon -->
        <test-method status="PASS" signature="day2moring()[pri:0, instance:udemy.testNG.days.Day2@7f9a81e8]" name="day2moring" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2moring -->
        <test-method status="PASS" signature="day2night()[pri:0, instance:udemy.testNG.days.Day2@7f9a81e8]" name="day2night" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2night -->
        <test-method status="PASS" signature="day2afterTest()[pri:0, instance:udemy.testNG.days.Day2@7f9a81e8]" name="day2afterTest" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2afterTest -->
      </class> <!-- udemy.testNG.days.Day2 -->
      <class name="udemy.testNG.days.Day3">
        <test-method status="PASS" signature="day3moring()[pri:0, instance:udemy.testNG.days.Day3@51081592]" name="day3moring" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3moring -->
        <test-method status="PASS" signature="day3night()[pri:0, instance:udemy.testNG.days.Day3@51081592]" name="day3night" duration-ms="6" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3night -->
        <test-method status="PASS" signature="day3afternoon()[pri:0, instance:udemy.testNG.days.Day3@51081592]" name="day3afternoon" duration-ms="2" started-at="2018-10-25T11:28:20Z" depends-on-methods="udemy.testNG.days.Day3.day3night" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3afternoon -->
      </class> <!-- udemy.testNG.days.Day3 -->
      <class name="udemy.testNG.loans.LendingTree">
        <test-method status="PASS" signature="lendingTreeCarLoan()[pri:0, instance:udemy.testNG.loans.LendingTree@396a51ab]" name="lendingTreeCarLoan" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lendingTreeCarLoan -->
        <test-method status="PASS" signature="lendingTreeHomeLoan()[pri:0, instance:udemy.testNG.loans.LendingTree@396a51ab]" name="lendingTreeHomeLoan" duration-ms="3" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lendingTreeHomeLoan -->
        <test-method status="PASS" signature="lendingTreePersonalLoan()[pri:0, instance:udemy.testNG.loans.LendingTree@396a51ab]" name="lendingTreePersonalLoan" duration-ms="5" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lendingTreePersonalLoan -->
        <test-method status="PASS" signature="beforeLendingTreeClass()[pri:0, instance:udemy.testNG.loans.LendingTree@396a51ab]" name="beforeLendingTreeClass" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeLendingTreeClass -->
      </class> <!-- udemy.testNG.loans.LendingTree -->
      <class name="udemy.testNG.loans.DCULoans">
        <test-method status="PASS" signature="beforeDCULoans()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="beforeDCULoans" is-config="true" duration-ms="1" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDCULoans -->
        <test-method status="PASS" signature="dcuCarLoan()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="dcuCarLoan" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dcuCarLoan -->
        <test-method status="PASS" signature="beforeDCULoans()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="beforeDCULoans" is-config="true" duration-ms="0" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDCULoans -->
        <test-method status="PASS" signature="dcuHomeLoan()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="dcuHomeLoan" duration-ms="4" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dcuHomeLoan -->
        <test-method status="PASS" signature="beforeDCULoans()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="beforeDCULoans" is-config="true" duration-ms="0" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDCULoans -->
        <test-method status="PASS" signature="dcuPersonalLoan()[pri:0, instance:udemy.testNG.loans.DCULoans@5034c75a]" name="dcuPersonalLoan" duration-ms="2" started-at="2018-10-25T11:28:20Z" finished-at="2018-10-25T11:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dcuPersonalLoan -->
      </class> <!-- udemy.testNG.loans.DCULoans -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
